name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy_infra:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Terraform Init
      run: terraform init

    - name: Terraform Apply
      run: terraform apply -auto-approve

  deploy_ecr_and_ecs:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Login to AWS ECR
      run: aws ecr get-login-password --region <AWS_REGION> | docker login --username AWS --password-stdin <AWS_ACCOUNT_ID>.dkr.ecr.<AWS_REGION>.amazonaws.com

    - name: Build and Push Docker Image
      run: |
        docker build -t <IMAGE_NAME>:<COMMIT_HASH> .
        docker tag <IMAGE_NAME>:<COMMIT_HASH> <AWS_ACCOUNT_ID>.dkr.ecr.<AWS_REGION>.amazonaws.com/<IMAGE_NAME>:<COMMIT_HASH>
        docker push <AWS_ACCOUNT_ID>.dkr.ecr.<AWS_REGION>.amazonaws.com/<IMAGE_NAME>:<COMMIT_HASH>

  deploy_to_ecs:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Login to AWS ECR
      run: aws ecr get-login-password --region <AWS_REGION> | docker login --username AWS --password-stdin <AWS_ACCOUNT_ID>.dkr.ecr.<AWS_REGION>.amazonaws.com

    - name: Deploy to ECS
      run: ecs-cli compose --file docker-compose.yml up --cluster <ECS_CLUSTER_NAME>

  appmesh_canary_deployment:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Run AppMesh Canary Deployment Script
      run: |
        ./appmesh_canary_deployment_script.sh

